type User {
  id: ID! @id
  username: String! @unique
  password: String!
}

type Supplier{
  id: ID! @id
  name: String! @unique
  email:String
  phone: String
  address: String
  amounttotake: Float @default(value:0)
  amounttopay: Float @default(value:0)
  paid: [PaidDetail!]!
}

type PaidDetail{
  id: ID! @id
  createdAt : DateTime @createdAt
  description : String
  amountpaid : Float
  amounttaken:Float
  supplier:Supplier!
}

type LineItem{
  id: ID! @id
  name: String! @unique
}

type Category{
  id: ID! @id
  name: String!
  lineitem:LineItem!
}

type Product{
  id: ID! @id
  barcode: String! @unique
  name: String!
  category:Category!
  stock:[StockItem!]!
}

type StockItem{
  id: ID! @id
  createdAt: DateTime!
  badgeNumber: String
  noofpieces: Int!
  buyPrice: Float!
  sellPrice: Float!
  wholesalePrice: Float!
  expiry: DateTime
  product: Product!
}

type SalesItem{
  id: ID! @id
  createdAt:DateTime! @createdAt
  noofpieces:Int!
  type:String!
  priceSold:Float!
  profit:Float
  originalQuantity:Int!
  discountUnit:Float
  discount:Float
  refundCriteria:[refundObject!]
  product:Product!
  salesTicket:SalesTicket!
}

type refundObject{
  id: ID! @id
  stockID:String!
  createdAt: DateTime!
  badgeNumber: String
  noofpieces: Int!
  buyPrice: Float!
  sellPrice: Float!
  wholesalePrice: Float!
  expiry: DateTime
}

type SalesTicket{
  id: ID! @id
  createdAt:DateTime! @createdAt
  receipt:String! @unique
  sales:[SalesItem!]!
}

type Expense{
  id: ID! @id
  createdAt: DateTime! @createdAt
  description: String!
  amount: Float!
}

type Barcode{
  id: ID! @id
  productID:String!
}

type Expiry{
  id: ID! @id
  description:String!
  productID:String! @unique
}

type Quantity{
  id: ID! @id
  productID: String! @unique
}

type Settings{
  id: ID! @id
  name: String! @unique
  quantityDays: Int!
  expiryDays: Int!
}